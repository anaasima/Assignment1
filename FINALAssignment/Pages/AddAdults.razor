@page "/AddAdults"
@using FINALAssignment.Data.AddAdultsService
@using global::Models
@inject IAddAdultsService IAddAdultsService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        @if (adults == null)
        {
            <p>
                <em>Loading...</em>
            </p>
        } else if (!adults.Any())
        {
            <p>
                <em>There are no Adults in our database.</em>
            </p>
        }
        else
        {
            <div class="form-group">
                <label>Search by name:</label>
                <input type="text" placeholder="name" @bind-value="filterName"/>
                <button @onclick="@(() => FilteredAdults(filterName))">
                    <i class="oi oi-bug" style="color:blue"/>
                </button>
            </div>
            @if (filterName.Equals(""))
            {
                <table class="table">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Sex</th>
                        <th>Job Title</th>
                        <th>Hair Color</th>
                        <th>Eye Color</th>
                        <th>Age</th>
                        <th>Weight</th>
                        <th>Height</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in adults)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Name</td>
                            <td>@item.Sex</td>
                            <td>@item.JobTitle</td>
                            <td>@item.HairColor</td>
                            <td>@item.EyeColor</td>
                            <td>@item.Age</td>
                            <td>@item.Weight</td>
                            <td>@item.Height</td>
                            <td>
                                <button @onclick="@(() => RemoveAdult(item))">
                                    <i class="oi oi-trash" style="color:red"/>
                                </button>
                                <button @onclick="@(() => EditAdult(item))">
                                    <i class="oi oi-bug" style="color:blue"/>
                                </button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <table class="table">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Sex</th>
                        <th>Job Title</th>
                        <th>Hair Color</th>
                        <th>Eye Color</th>
                        <th>Age</th>
                        <th>Weight</th>
                        <th>Height</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in filteredAdults)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Name</td>
                            <td>@item.Sex</td>
                            <td>@item.JobTitle</td>
                            <td>@item.HairColor</td>
                            <td>@item.EyeColor</td>
                            <td>@item.Age</td>
                            <td>@item.Weight</td>
                            <td>@item.Height</td>
                            <td>
                                <button @onclick="@(() => RemoveAdult(item))">
                                    <i class="oi oi-trash" style="color:red"/>
                                </button>
                                <button @onclick="@(() => EditAdult(item))">
                                    <i class="oi oi-bug" style="color:blue"/>
                                </button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
        }
    </Authorized>
</AuthorizeView>

@code {
    private IList<Adult> adults;
    private IList<Adult> filteredAdults;
    private String filterName;

    [Parameter]
    public Adult adultToEdit { get; set; }

    protected override async Task OnInitializedAsync()
    {
        filterName = "";
        adults = IAddAdultsService.GetAdults();
        filteredAdults = new List<Adult>();
    }

    private void RemoveAdult(Adult adult)
    {
        Adult adultToRemove = adults.First(a => a.Id == adult.Id);
        IAddAdultsService.RemoveAdult(adult);
        adults.Remove(adultToRemove);
    }

    private void EditAdult(Adult adult)
    {
        adultToEdit = adults.First(a => a.Id == adult.Id);
        NavigationManager.NavigateTo("/EditAdults/" + adultToEdit.Id);
    }

    private void FilteredAdults(string filter)
    {
        for (int i = 0; i < adults.Count; i++)
        {
            if (adults[i].Name.Equals(filter))
            {
                filteredAdults.Add(adults[i]);
            }
        }

    }

}
